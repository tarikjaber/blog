---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

interface Post {
  frontmatter: {
    tags: string[];
  };
}

// Define a type for the objects returned by getStaticPaths
interface StaticPath {
  params: {
    tag: string;
  };
  props: {
    posts: Post[];
  };
}

export async function getStaticPaths(): Promise<StaticPath[]> {
  const allPosts: Post[] = await Astro.glob('../posts/*.md');

  const uniqueTags: string[] = Array.from(new Set(allPosts.map((post) => post.frontmatter.tags).flat()));

  return uniqueTags.map((tag) => {
    const filteredPosts: Post[] = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } : { posts: any[] } = Astro.props;
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>
